<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Serious Technobabble</title>
    <description>Iv√°n Stepaniuk's blog about software craftsmanship</description>
    <link>http://blog.istepaniuk.com/</link>
    <atom:link href="http://blog.istepaniuk.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 31 Dec 2014 15:09:44 -0500</pubDate>
    <lastBuildDate>Wed, 31 Dec 2014 15:09:44 -0500</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>The Shapes of Bad Code, Part 1</title>
        <description>&lt;p&gt;I have noticed that when looking at some not-so-awesome piece of code for the first time, I can tell many things about it even before putting my glasses on, and while scrolling at a speed at which it is actually impossible to read anything at all.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h4&gt;&amp;ndash; &lt;em&gt;&amp;quot;Oh my god, look at this code!&amp;quot;&lt;/em&gt;&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;h3&gt;The Shape of Bad Code&lt;/h3&gt;

&lt;p&gt;So what is that I see? The only thing you can see while scrolling that fast and squinting is shapes, the shapes formed by different blocks of text filling the screen, plus the colors of your syntax highlighting.&lt;/p&gt;

&lt;p&gt;So I decided to make some screenshots of my text editor to illustrate some of these bad code shapes, and I will write a post for two of these at a time. I also distorted the images to make sure we are not actually reading this code.&lt;/p&gt;

&lt;h4&gt;Code Duplication&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/shape-duplication.png&quot; alt=&quot;Code duplication&quot;&gt;&lt;/p&gt;

&lt;p&gt;This is probably the best example so it goes first. This is JavaScript, but that is completely irrelevant in this case. This image shows two near-identical functions, both fit the screen and what&amp;#39;s going on is quite obvious. Sometimes a few scroll up &amp;amp; down movements are required to reveal a block of code that has been mercilessly copy-pasted, even more than once. I will not tell you why having duplicated code is bad, you probably learned that the first time you write a program with more than 30 lines.&lt;/p&gt;

&lt;p&gt;This duplication was probably introduced because it would have taken 120 more seconds to understand the original functionality and modify the existing code accordingly. Of course, it will now take 10 minutes to revert the damage, or even more if the different copies started to diverge.&lt;/p&gt;

&lt;h4&gt;Too Many Dependencies&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/shape-imports.png&quot; alt=&quot;Too may dependencies&quot;&gt;&lt;/p&gt;

&lt;p&gt;This is Python code, but the same shape is valid for any other language that requires you to declare the dependencies before using them, and that would be most of them.&lt;/p&gt;

&lt;p&gt;We do not know what is that this piece of code does, but there is something I can be sure of; There is practically no way that a this file/module/class is doing &lt;strong&gt;only one thing.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If it needs this all these &lt;code&gt;import&lt;/code&gt; statements, the &lt;a href=&quot;https://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;single responsibility principle&lt;/a&gt; is clearly not being observed. If the file/module had many smaller classes with different dependencies each, it&amp;#39;s also time to split this file into smaller ones, as almost every reason to observe SRP in classes and methods also applies for entities at the file (or module, package, assembly, etc.) level.&lt;/p&gt;

&lt;h4&gt;Stay tuned for more ugly code shapes soon!&lt;/h4&gt;
</description>
        <pubDate>Mon, 29 Dec 2014 00:00:00 -0500</pubDate>
        <link>http://blog.istepaniuk.com/the-shapes-of-bad-code-part-1/</link>
        <guid isPermaLink="true">http://blog.istepaniuk.com/the-shapes-of-bad-code-part-1/</guid>
        
        
        <category>idle</category>
        
      </item>
    
      <item>
        <title>Something Is Terribly Wrong with Wordpress</title>
        <description>&lt;h3&gt;WARNING: This is just a rant, probably you should not read it.&lt;/h3&gt;

&lt;p&gt;This 2014 was a year of many changes, new company, new country, new house, all excellent excuses to stop writting posts! Lately, for these and other reasons I was not finding a lot of oportunities to write here. To make it even worse, every time I logged into my wordpress admin interface to write a draft or post, I remembered how hard Wordpress sucks. Really.&lt;/p&gt;

&lt;p&gt;Some years ago I decided to start blogging and went with Wordpress. It was the obvious choice, popular, and very easy to install and use. The problem is that what you get from &lt;strong&gt;Wordpress out of the box is not good enough&lt;/strong&gt;, at least if you are anywhere close to serious about it.&lt;/p&gt;

&lt;p&gt;As soon as you go online the spam will start pouring down. The built-in comment system can drive you crazy when you have 1 real comment for every 5000, but that&amp;#39;s easy, just spend half a day trying plugins until you find the one that does not cost you an eye and actually filters something.&lt;/p&gt;

&lt;p&gt;The same goes for social buttons, analytics, your twitter card, &lt;strike&gt;google authorship&lt;/strike&gt;,... &lt;strong&gt;Plugin magic!&lt;/strong&gt;. Do you want to add some code snippets to your posts? No problem, 3 or 4 plugins latter you will find something that does not completely destroy the theme or brings the whole server down.&lt;/p&gt;

&lt;p&gt;Wordpress releases updates quite often, but many of those installed plugins will start failing with even minor version upgrades, not only because they are hacky (some really are, even the popular ones) but because everything seems to be so tightly coupled to the Wordpress core that &lt;strong&gt;they shouldn&amp;#39;t be called plugins but grafts.&lt;/strong&gt; Good luck trying to keep all those updated. 17 in my case.&lt;/p&gt;

&lt;p&gt;All these hacks slow down your site, but don&amp;#39;t worry, there is a cache plugin to solve that! there is even a plugin to make Wordpress secure enough (WTF!) so your hosting provider does not shut you down when some script tries to brute-force your admin credentials, or when spammers bring your site to it&amp;#39;s knees.&lt;/p&gt;

&lt;h3&gt;Back to square one&lt;/h3&gt;

&lt;p&gt;With all those hacks, the site can respond reasonably fast for the public, but that doesn&amp;#39;t make the admin interface any faster, specially if you are on a cheap hosting provider. Bet your bottom dollar that any support ticket about Wordpress performance is going to contain &amp;quot;disable all the plugins&amp;quot; in the very first answer.&lt;/p&gt;

&lt;h3&gt;Questions&lt;/h3&gt;

&lt;p&gt;Given that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I have &lt;strong&gt;less than 200KB&lt;/strong&gt; of written content.&lt;/li&gt;
&lt;li&gt;I have less than 4MB of pictures.&lt;/li&gt;
&lt;li&gt;The site gets an average of 100 daily sessions with only 1.2 views per sessions.&lt;/li&gt;
&lt;li&gt;It has very, very ocasional traffic bursts.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Why do I need all these plugins?&lt;/li&gt;
&lt;li&gt;A cache plugin? Why isn&amp;#39;t it just fast enough for this?&lt;/li&gt;
&lt;li&gt;A security plugin? Why isn&amp;#39;t it secure enough?&lt;/li&gt;
&lt;li&gt;Why is that the built-in comment system is not practical, even for a small site?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Why do I need a full-fledged RDBMS to power a simple blog?&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I just want to write some stuff, it shouldn&amp;#39;t be so damn complicated.&lt;/p&gt;

&lt;h3&gt;The solution&lt;/h3&gt;

&lt;p&gt;If you are not a developer or sysadmin or you would rather spend your time blogging and not dealing with this nightmare, get somebody to manage your Wordpress for you, or get a paid &lt;a href=&quot;http://wordpress.com&quot;&gt;wordpress.com&lt;/a&gt; account, or a &lt;a href=&quot;http://ghost.org&quot;&gt;ghost.org&lt;/a&gt; one, etc. Running it yourself is an incredible waste of time.&lt;/p&gt;

&lt;p&gt;If you ARE a developer or systadmin wanting to run a tech blog, &lt;strong&gt;there is a solution!&lt;/strong&gt; it&amp;#39;s called &lt;a href=&quot;http://www.jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; and I will tell about it very soon!&lt;/p&gt;
</description>
        <pubDate>Sun, 28 Dec 2014 00:00:00 -0500</pubDate>
        <link>http://blog.istepaniuk.com/something-is-terribly-wrong-with-wordpress/</link>
        <guid isPermaLink="true">http://blog.istepaniuk.com/something-is-terribly-wrong-with-wordpress/</guid>
        
        
        <category>idle</category>
        
      </item>
    
      <item>
        <title>Linux Counter</title>
        <description>&lt;p&gt;I just remembered I have one of these, and look! It still works!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://linuxcounter.net/cert/325954.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Soon it&amp;#8217;s going to be 15 years since I started using Linux, time flies.&lt;/p&gt;
</description>
        <pubDate>Sat, 15 Feb 2014 00:00:00 -0500</pubDate>
        <link>http://blog.istepaniuk.com/linux-counter/</link>
        <guid isPermaLink="true">http://blog.istepaniuk.com/linux-counter/</guid>
        
        
        <category>idle</category>
        
      </item>
    
      <item>
        <title>Just installed Ghost on Heroku!</title>
        <description>&lt;h3&gt;&lt;a title=&quot;This post Ghost, on Heroku&quot; href=&quot;http://istepaniuk.herokuapp.com/just-installed-ghost-on-heroku/&quot; target=&quot;_blank&quot;&gt;Check it out!&lt;/a&gt; (And you can continue reading there, it is a copy of this post)&lt;/h3&gt;

&lt;p&gt;I was looking for alternatives to WordPress for my blog, I wanted it to be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Opengraph compatible&lt;/li&gt;
&lt;li&gt;Good SEO support&lt;/li&gt;
&lt;li&gt;Markdown based&lt;/li&gt;
&lt;li&gt;Fast&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In my search, I&amp;#8217;ve found &lt;a href=&quot;http://www.tryghost.org&quot; target=&quot;_blank&quot;&gt;Ghost&lt;/a&gt;, it was REALLY fast on my old laptop and It seemed like a nice oportunity to give Heroku a try.&lt;/p&gt;

&lt;p&gt;I always liked the heroku concept, and my current &lt;a href=&quot;http://www.quijost.com&quot; target=&quot;_blank&quot;&gt;hosting&lt;/a&gt; does not support Node.JS anyway (though it does suport Python and Ruby!)&lt;/p&gt;

&lt;p&gt;Editing text on Ghost is just awesome! Writting in markdown with side-by-side instant preview, is just awesome. Check it out at their site, or watch the video.&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//www.kickstarter.com/projects/johnonolan/ghost-just-a-blogging-platform/widget/video.html&quot; height=&quot;480&quot; width=&quot;640&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;Ghost is free and open source, they also plan to have their own hosting service, similar to wordpress.org, I guess.&lt;/p&gt;

&lt;h1&gt;Asking for trouble&lt;/h1&gt;

&lt;p&gt;I had to crazy-patch Ghost to make it work on Postgres as this database is not yet supported. It comes with SQLite as default and besides that, it only supports MySQL officially.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It is not a good idea to run Ghost on a free Heroku account&lt;/strong&gt;, as MySQL is not available and your uploaded images will be erased by the Heroku&amp;#8217;s ephimerous filesystem.&lt;/p&gt;

&lt;p&gt;In any case, Ghost is probably my next blogging platform.&lt;/p&gt;
</description>
        <pubDate>Sun, 17 Nov 2013 00:00:00 -0500</pubDate>
        <link>http://blog.istepaniuk.com/just-installed-ghost-on-heroku/</link>
        <guid isPermaLink="true">http://blog.istepaniuk.com/just-installed-ghost-on-heroku/</guid>
        
        
        <category>idle</category>
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>What Is Enterprise Software?</title>
        <description>&lt;p&gt;Big IT vendors market their products as &amp;#8220;enterprise ready&amp;#8221;, basically meaning &amp;#8220;ready to rip you off&amp;#8221;. This, and other misuses of the term explain why using the word &amp;#8220;enterprise&amp;#8221; to describe a piece of software triggers horrified looks and trying-not-to-vomit faces. The &lt;a href=&quot;http://www.urbandictionary.com/define.php?term=intertubes&quot; target=&quot;_blank&quot;&gt;intertubes&lt;/a&gt; have excellent definitions for what Enterprise Software is, but it seems there is place for yet another answer to this question.&lt;/p&gt;

&lt;p&gt;Not so surprisingly, in the first pages of Martin Fowler&amp;#8217;s &lt;a href=&quot;http://www.amazon.com/Patterns-Enterprise-Application-Architecture-Martin/dp/0321127420&quot;&gt;&lt;em&gt;Patterns of Enterprise Application Architecture&lt;/em&gt;&lt;/a&gt;, there is a good definition of what Enterprise Software is, and what isn&amp;#8217;t.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;#8220;&lt;strong&gt;Enterprise applications&lt;/strong&gt; are about the display, manipulation, and storage of large amounts of often complex data and the support or automation of business processes with that data.&amp;#8221; -Martin Fowler&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Fowler&amp;#8217;s book also gives some examples of what is not Enterprise Software:* &amp;#8220;Automobile fuel injection, word processors, elevator controllers, chemical plant controllers, telephone switches, operating systems, compilers and games&amp;#8221;*&lt;/p&gt;

&lt;p&gt;The English Wikipedia has a fairly good article on what &lt;a href=&quot;http://en.wikipedia.org/wiki/Enterprise_software&quot;&gt;Enterprise Software&lt;/a&gt; means:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&amp;#8220;Enterprise software&lt;/strong&gt;, is purposed-designed computer software used in the furtherance of the needs and objectives of the organizations; such purposes can vary widely as in a business, schools, interest-based user groups and clubs, retailers, or government, as opposed to software used by individuals.&amp;#8221; (from the English Wikipedia)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, next time you hear &amp;#8220;Enterprise Software&amp;#8221;, &lt;strong&gt;try not to think about the dark side&lt;/strong&gt;, let&amp;#8217;s recover the term.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.thinkgeek.com/product/e732/&quot;&gt;&lt;img class=&quot;size-full wp-image-551&quot; alt=&quot;Darkside&quot; src=&quot;/img/dark-side.jpg&quot; /&gt;&lt;/a&gt;
&lt;span style=&quot;color: #aaa;&quot;&gt;This image copyright is owned by ThinkGeek, it is used here to represent and link to their product.&lt;br /&gt;This site has no affiliation with ThinkGeek whatsoever.&lt;/span&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Sep 2013 00:00:00 -0400</pubDate>
        <link>http://blog.istepaniuk.com/what-is-enterprise-software/</link>
        <guid isPermaLink="true">http://blog.istepaniuk.com/what-is-enterprise-software/</guid>
        
        
        <category>idle</category>
        
      </item>
    
      <item>
        <title>Conferencia Agile Spain 2013</title>
        <description>&lt;p&gt;I will be speaking at this year&amp;#8217;s CAS, the most important Agile conference in Spain, held yearly in a different city each time: &lt;a href=&quot;http://conferencia2013.agile-spain.org/en/la-conferencia/&quot; target=&quot;_blank&quot;&gt;http://conferencia2013.agile-spain.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://conferencia2013.agile-spain.org/en/la-conferencia/&quot; target=&quot;_blank&quot;&gt;&lt;br /&gt; &lt;img alt=&quot;CAS 2013 Logo&quot; src=&quot;/img/logo-cas.jpg&quot; width=&quot;621&quot; height=&quot;180&quot; /&gt;&lt;br /&gt; &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My talk title will be &amp;#8220;&lt;strong&gt;Effective Pair Programming&lt;/strong&gt;&amp;#8220;. The idea with the title (besides not being very original) is to emphasize that it won&amp;#8217;t be yet another pair programming evangelism talk, but rather a talk about improving the way developers pair, targeted at those who failed, are struggling with, or want to improve their pair programming skills.&lt;/p&gt;

&lt;p&gt;Below is the talk abstract/proposal. &lt;strong&gt;See you in Bilbao!&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;Effective Pair Programming&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Pair programming is a central element in Extreme Programming (XP) and its correct practice dramatically improves software quality. The technique is however quite difficult to master, and not doing it properly will not only be frustrating for the developers but also a waste of the company resources. This talk introduces different approaches to the technique and shows the audience how to avoid the common pitfalls that developers will encounter in their path to effective pair programming.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this presentation, I will cover the principles underneath the technique&amp;#8217;s productivity gains and why it increases the amount of error-free code over solo programming without spending more resources. I will also show how its practice reduces the team bus factor, and how pair rotation distributes information, effectively eliminating knowledge islands in the team.&lt;/p&gt;

&lt;p&gt;Different developers have different experience levels and personalities. I will talk about different combinations and how to overcome these mismatches to enable the pair to become greater than the sum of its parts, thus producing software of greater quality and maintainability. I will cover the classical XP driver/navigator roles but also tag-teams and less formal approaches.&lt;/p&gt;

&lt;p&gt;Pair programming is a challenging practice, and though it is not a novelty, it is still surrounded by many misconceptions. I will step through DO&amp;#8217;s and DON&amp;#8217;ts based on both documented and my own grounded experience on the topic, how it tightly fits other agile development practices such as Test Driven Development, and what to expect when introducing this technique in a team.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cas2k13.ideascale.com/a/dtd/Effective-Pair-Programming/4166-24662&quot; target=&quot;_blank&quot;&gt;Link to the proposal on IdeaScale&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 09 Sep 2013 00:00:00 -0400</pubDate>
        <link>http://blog.istepaniuk.com/conferencia-agile-spain-2013/</link>
        <guid isPermaLink="true">http://blog.istepaniuk.com/conferencia-agile-spain-2013/</guid>
        
        <category>Agile-Spain</category>
        
        <category>CAS</category>
        
        <category>conference</category>
        
        
        <category>agile</category>
        
        <category>community</category>
        
      </item>
    
      <item>
        <title>Refactoring Dojo: The Gilded Rose Kata</title>
        <description>&lt;p&gt;Last week Rafael de Castro (&lt;a href=&quot;http://twitter.com/rafadc&quot; title=&quot;Rafael de Castro on twitter&quot;&gt;@rafadc&lt;/a&gt;) and I facilitated a &lt;a title=&quot;Coding Dojos Are Great&quot; href=&quot;/coding-dojos-are-great/&quot; target=&quot;_blank&quot;&gt;Coding Dojo&lt;/a&gt; for the Madrid Software Craftsmanship &lt;a title=&quot;Madrid Software Craftsmanship on Meetup&quot; href=&quot;http://www.meetup.com/madswcraft/&quot; target=&quot;_blank&quot;&gt;meetup&lt;/a&gt; group (219 members and growing every week!) in which we participate. The idea was to make a Dojo in which we could practice refactoring.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;/img/ivan-stepaniuk-dojo.jpg&quot;&gt;
       &lt;img src=&quot;/img/ivan-stepaniuk-dojo.jpg&quot; alt=&quot;Iv√°n Stepaniuk standing in the back, and some Madrid Craftsmen and Craftswomen at work!&quot;&gt;
    &lt;/a&gt;
&lt;figcaption&gt;
    Iv√°n Stepaniuk standing in the back, and some Madrid Craftsmen and Craftswomen at work!
&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It went pretty well! This is the second time we meet in the &lt;a title=&quot;MediaLab Prado&quot; href=&quot;http://medialab-prado.es/article/que_es&quot; target=&quot;_blank&quot;&gt;MediaLab Prado&lt;/a&gt; in Madrid, a &amp;#8220;citizen laboratory for the production, research and dissemination of cultural projects that explore collaborative forms of experimentation and learning that have emerged from digital networks.&amp;#8221;, founded by the Madrid City Council, &lt;strong&gt;COOL!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For the Dojo we have chosen a well known Kata called &amp;#8220;Gilded Rose&amp;#8221;, it is a very simple piece of software that updates the quality value of the items in a store following some simple business rules. The problem is that &lt;strong&gt;the code sucks&lt;/strong&gt;, we are asked to add a new feature but the code is so horrible that you don&amp;#8217;t even know where to start.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;/img/rafa-de-castro-dojo.jpg&quot;&gt;
       &lt;img src=&quot;/img/rafa-de-castro-dojo.jpg&quot; alt=&quot;Rafael de Castro Facilitating the Refactoring Dojo&quot;&gt;
    &lt;/a&gt;
&lt;figcaption&gt;
    Rafael de Castro Facilitating the Refactoring Dojo
&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;We had limited time, so we choose JavaScript, that way nobody would have to install anything special on their computers, and everybody has a text editor and a browser to launch &lt;a title=&quot;Jasmine&quot; href=&quot;http://pivotal.github.io/jasmine&quot; target=&quot;_blank&quot;&gt;Jasmine&lt;/a&gt;, right?. We distributed several pen drives with the same copy of the code plus a working test runner. And because we wanted to focus on the refactoring techniques I also included the tests, already passing.&lt;/p&gt;

&lt;h2&gt;The schedule&lt;/h2&gt;

&lt;p&gt;(at least the planned one!)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;20m:&lt;/strong&gt; Introduction to the exercise, explaining the problem.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;05m:&lt;/strong&gt; Distributing the USB pen drives and asking the attendees to sit in pairs, trying that people that has more experience sits with people that does not.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;40m:&lt;/strong&gt; Pomodoro 1&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;15m:&lt;/strong&gt; Break: Group discussion on the problems they have found, connecting some of the computers to the projector so the teams explain what are they doing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;40m:&lt;/strong&gt; Pomodoro 2, &lt;strong&gt;changing pairs&lt;/strong&gt;!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;20m:&lt;/strong&gt; &amp;#8220;Show me the code!&amp;#8221; We collected every solution on pen drives each pair shows it on the screen and explain their refactors to the group.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;05m:&lt;/strong&gt; Conclusions, Short retrospective, closing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Protip: ask the people to bring their [WeirdAppleConnector] to VGA adapters if they have them! Also, for the final &amp;#8220;show&amp;amp;tell&amp;#8221;, it&amp;#8217;s easier to collect the code in pen drives again than to connect many laptops to a projector.&lt;/p&gt;

&lt;h2&gt;The code&lt;/h2&gt;

&lt;p&gt;The Kata code is on &lt;a title=&quot;The code on github&quot; href=&quot;https://github.com/istepaniuk/gilded-rose-js-with-tests&quot; target=&quot;_blank&quot;&gt;my github account,&lt;/a&gt; where you can also find a folder named &amp;#8216;solutions&amp;#8217; that contains 8 of the solutions that were written during the Dojo. In most of the cases, 3 people participated in writing the code because pairs where swapped in the break.&lt;/p&gt;

&lt;h3&gt;Happy hacking!&lt;/h3&gt;
</description>
        <pubDate>Sun, 04 Aug 2013 00:00:00 -0400</pubDate>
        <link>http://blog.istepaniuk.com/refactoring-dojo-the-gilded-rose-kata/</link>
        <guid isPermaLink="true">http://blog.istepaniuk.com/refactoring-dojo-the-gilded-rose-kata/</guid>
        
        <category>coding dojo</category>
        
        <category>craftsmanship</category>
        
        <category>gilded rose</category>
        
        <category>kata</category>
        
        
        <category>agile</category>
        
        <category>community</category>
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>DeskSurfing at Alea</title>
        <description>&lt;p&gt;The development team at &lt;a href=&quot;http://www.alea-soluciones.com/&quot; target=&quot;_blank&quot;&gt;Alea Soluciones&lt;/a&gt;, nicknamed &amp;#8216;Bifer&amp;#8217;, invited me to join them for a &lt;span style=&quot;text-decoration: underline;&quot;&gt;DeskSurfing&lt;/span&gt; (soon a short article on this topic). So, last week I have spent two days at Alea, pair programming with their team and test-driving some new features, it was great!&lt;/p&gt;

&lt;h2&gt;Day 1:&lt;/h2&gt;

&lt;p&gt;We started with some organization news from Eduardo, immediately followed by the daily meeting. Alberto and Nestor Salceda ([@nestorsalceda][1]) were connected via &lt;a href=&quot;http://www.google.com/+/learnmore/hangouts/&quot; target=&quot;_blank&quot;&gt;Google Hang Out&lt;/a&gt;, tasks where discussed and we set them up on &lt;a href=&quot;https://trello.com/&quot; target=&quot;_blank&quot;&gt;Trello&lt;/a&gt;, &lt;strong&gt;ready to go!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Then after a fast coffee, Guillermo and I dived into adding a feature to their telephony monitoring system. The new feature required some minor changes through various components so I got a good big picture of their architecture, message passing, templating system, etc.&lt;/p&gt;

&lt;p&gt;We grabbed some salad for a fast lunch, and at the end of the day we toured their offices a little more. We stopped at their laboratory, where they have a small version of what a cable operator would have. This setup allows them to test against the real thing. Really interesting stuff I would say.&lt;/p&gt;

&lt;h2&gt;Day 2&lt;/h2&gt;

&lt;p&gt;Again, daily meeting to start. This time Alberto was in the office, we discussed the outcome of Day 1 tasks , this time I had to participate! After the meeting, I grabbed some coffee and met with the team to discuss a performance improvement for a &lt;a href=&quot;http://en.wikipedia.org/wiki/Provisioning&quot; target=&quot;_blank&quot;&gt;provisioning&lt;/a&gt; system. I paired with Alberto with that specific task, and we rewritten the tests to pull data from &lt;a href=&quot;http://redis.io/&quot; target=&quot;_blank&quot;&gt;Redis&lt;/a&gt; instead of querying hardware via SNMP. Then after a quick lunch I paired with Eduardo continuing a similar task.&lt;/p&gt;

&lt;p&gt;Funny fact: Sometimes I use the &lt;a title=&quot;Command-line interface&quot; href=&quot;http://en.wikipedia.org/wiki/Command-line_interface&quot; target=&quot;_blank&quot;&gt;CLI&lt;/a&gt; as an example for an alternative DM (delivery mechanism) to enforce decoupling the DM from the Application;¬† Alea &lt;em&gt;does actually have a&lt;/em&gt; CLI as an alternative DM for some of their applications. DM Decoupling FTW!&lt;/p&gt;

&lt;h2&gt;I liked:&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Unit tests were &lt;em&gt;really&lt;/em&gt; fast&lt;/strong&gt;, so ridiculously fast that you can run ALL tests with¬†&lt;a href=&quot;http://linux.die.net/man/1/watch&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;watch&lt;/em&gt;&lt;/a&gt; in the command line (even glued with &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Growl_%28software%29&quot; target=&quot;_blank&quot;&gt;growl&lt;/a&gt;&lt;/em&gt;, gnome &lt;em&gt;notify&lt;/em&gt; or similar) and forget about it while you work on the code. By the way, integration tests where super fast also. That&amp;#8217;s the way!&lt;/p&gt;

&lt;p&gt;Their deployment infrastructure allowed them to** deploy in less than a minute** to any environment, from the command line. Awesome.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://martinfowler.com/bliki/FeatureToggle.html&quot; target=&quot;_blank&quot;&gt;Feature toggling&lt;/a&gt; allowed them to deploy deactivated features, and give the marketing/business people the control over the &amp;#8220;feature switches&amp;#8221; whenever they see fit, and for individual customers at a time. Double awesome.&lt;/p&gt;

&lt;p&gt;Their development team is small, skilled and tightly packed.** Information flows freely** in their office, via &lt;a href=&quot;https://trello.com/&quot; target=&quot;_blank&quot;&gt;Trello&lt;/a&gt;, and via their daily meetings with Google &lt;a href=&quot;http://www.google.com/+/learnmore/hangouts/&quot; target=&quot;_blank&quot;&gt;Hangout&lt;/a&gt; with the people that are working remotely.&lt;/p&gt;

&lt;h2&gt;My homework:&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.rabbitmq.com/&quot; target=&quot;_blank&quot;&gt;RabitMQ&lt;/a&gt; as a message queue to connect different applications in an decoupled way looks very good. SaludOnNet has many application contexts that share data, and independent deployability is very important to us. &lt;strong&gt;The way the Alea team deals with this could be potentially applied to improve our own architecture.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Outside my comfort zone:&lt;/h2&gt;

&lt;p&gt;I have really struggled to keep up with this guys&amp;#8217; business domain. Lots of acronyms are part of their ubiquitous language, take a look at the content table of &lt;a href=&quot;http://en.wikipedia.org/wiki/Passive_optical_network&quot; target=&quot;_blank&quot;&gt;this wikipedia article&lt;/a&gt; and you will see what I am talking about. It took me more than a day to get fluent with their domain, or at least with the part they were working on. &lt;strong&gt;Pair programming proved fundamental for this knowledge transfer.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This domain knowledge handicap and some rusty/lacking python skills of mine were putting my brain to good use. I mean, &lt;span style=&quot;text-decoration: underline;&quot;&gt;all&lt;/span&gt; of my brain. Nonetheless, patterns, TDD and refactoring techniques where in general very similar to what I do in &lt;em&gt;JavaScript&lt;/em&gt; or C# every day.&lt;/p&gt;

&lt;p&gt;Some of our work required to interact with real hardware via &lt;a href=&quot;http://en.wikipedia.org/wiki/Simple_Network_Management_Protocol&quot; target=&quot;_blank&quot;&gt;SNMP.&lt;/a&gt; This made end-to-end testing more difficult because their initial state could not be always trusted. When something went wrong, we were sometimes doubting about the problem being in the new code, or in some hardware configuration out of our control.&lt;/p&gt;

&lt;p&gt;The one hour+ commute to their offices proved painful compared to my 20 minute-ish daily commute, made me think about some colleagues at &lt;em&gt;SaludOnNet&lt;/em&gt; that do that every day.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;/img/desksurfing-alea-big.jpg&quot;&gt;
       &lt;img src=&quot;/img/desksurfing-alea-big.jpg&quot; alt=&quot;Guillermo Pascual, Iv√°n Stepaniuk, Alberto P√©rez, Eduardo Ferro&quot;&gt;
    &lt;/a&gt;
&lt;figcaption&gt;
    Guillermo Pascual, Iv√°n Stepaniuk, Alberto P√©rez, Eduardo Ferro
&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Thanks&lt;/strong&gt; guys for opening your doors and for this excellent opportunity. Looking forward to have you DeskSurfing our offices soon!&lt;/p&gt;
</description>
        <pubDate>Sun, 14 Jul 2013 00:00:00 -0400</pubDate>
        <link>http://blog.istepaniuk.com/desksurfing-at-alea/</link>
        <guid isPermaLink="true">http://blog.istepaniuk.com/desksurfing-at-alea/</guid>
        
        <category>desk surfing</category>
        
        <category>desksurfing</category>
        
        <category>pair programming</category>
        
        
        <category>agile</category>
        
        <category>idle</category>
        
      </item>
    
      <item>
        <title>This Is How My Desktop Looks &amp;#8211; Screenshots</title>
        <description>&lt;p&gt;A colleague was recently ranting about Visual Studio and how many buttons those toolbars have by default. I am using Visual Studio 2010 for some time now, and got rid of the toolbars long ago. I also have two monitors, and wanted to share the way I have my VS and screen configured, so here are some screenshots.&lt;/p&gt;

&lt;h2&gt;This is what I have on the left monitor:¬† &lt;a href=&quot;/img/desktop-left.png&quot; target=&quot;_blank&quot;&gt;&lt;img class=&quot;alignleft size-large wp-image-457&quot; title=&quot;Visual Studio Full Screen, click to enlarge&quot; alt=&quot;Visual Studio Full Screen&quot; src=&quot;/img/desktop-left-640x360.png&quot; width=&quot;640&quot; height=&quot;360&quot; /&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;There are no toolbars and no horizontal scroll. VS is on full-screen mode. I¬†sometimes use it without full-screen, but I have installed an extension that hides the menu bar until I press &lt;em&gt;alt&lt;/em&gt;. My keyboard is also not on the center but aligned with this monitor, on the left. The color scheme is based on something I don&amp;#8217;t remember, plus some minor tweaks over the time. The solution explorer shows on this side too with &lt;em&gt;Ctrl+W,S&lt;/em&gt; but it is not pinned most of the time.&lt;/p&gt;

&lt;p&gt;And yes, the fonts are &lt;strong&gt;big&lt;/strong&gt;. I rarely go after the 80-90ish chars wide, and 25 lines is more than enough if your code is clean, your methods short, and your desing &lt;strong&gt;S&lt;/strong&gt;OLID. Believe me, it&amp;#8217;s not some 80&amp;#215;25 VGA text-mode nostalgia. My colleague and friend Carlos Bl√© (&lt;a href=&quot;https://twitter.com/carlosble&quot;&gt;@carlosble&lt;/a&gt;) made me try huge fonts when pair programming, and I confirmed his theory: your eyes get less tired after a day of work if you have big fonts. &lt;a href=&quot;http://www.jetbrains.com/resharper/‚Äé&quot; target=&quot;_blank&quot;&gt;ReSharper&lt;/a&gt; &amp;#8220;light&amp;#8221; on the lower-right corner.&lt;/p&gt;

&lt;h2&gt;And this is what I have on the right monitor:&lt;a href=&quot;/img/desktop-right.png&quot; target=&quot;_blank&quot;&gt;&lt;img class=&quot;alignleft size-large wp-image-456&quot; alt=&quot;Visual Studio Right Monitor&quot; src=&quot;/img/desktop-right-640x400.png&quot; width=&quot;640&quot; height=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;This is actually the primary monitor. I use the task bar (or whatever name this thing has now) on the right, and most programs not being VS will open on this side, away from the code.&lt;/p&gt;

&lt;p&gt;We use &lt;a href=&quot;http://www.testdriven.net/&quot;&gt;TestDriven&lt;/a&gt; to launch our tests, it is very fast and uses the output console for results, so it is very handy to have a large output console when TTDing, I usually have all other tabs like errors or the PMC.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That black console:&lt;/strong&gt; Well&amp;#8230; I needed something to cover up assembly names (to keep lawyers away). It is a fairly complete &lt;a href=&quot;http://www.cygwin.com/‚Äé&quot; target=&quot;_blank&quot;&gt;cygwin&lt;/a&gt; environment, I am a primarily &lt;em&gt;GNU/Linux&lt;/em&gt; user, and been so for almost a decade and a half. I use it at home and also in my laptop, and sometimes feel pretty lost without &lt;em&gt;bash/&lt;/em&gt;*grep/sed/awk/printf/cut/sort/uniq/et. al. *&lt;/p&gt;

&lt;h2&gt;This is what my GNU/Linux Desktop looks like, at home:&lt;a href=&quot;/img/desktop-linux.png&quot; target=&quot;_blank&quot;&gt;&lt;img class=&quot;alignleft size-large wp-image-455&quot; title=&quot;Linux Desktop - Gnome 3, click to enlarge&quot; alt=&quot;Linux Desktop - Gnome 3&quot; src=&quot;/img/desktop-linux-640x400.png&quot; width=&quot;640&quot; height=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I use Debian (pinning Experimental/Unstable), Gnome 3.&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Jul 2013 00:00:00 -0400</pubDate>
        <link>http://blog.istepaniuk.com/this-is-how-my-desktop-looks-screenshots/</link>
        <guid isPermaLink="true">http://blog.istepaniuk.com/this-is-how-my-desktop-looks-screenshots/</guid>
        
        <category>desktop</category>
        
        <category>monitors</category>
        
        <category>visual studio</category>
        
        
        <category>.net</category>
        
        <category>idle</category>
        
      </item>
    
      <item>
        <title>Quality Is Not an Option</title>
        <description>&lt;p&gt;I have recently participated in a meeting of¬†&lt;a href=&quot;https://twitter.com/MsCodersMadrid&quot; target=&quot;_blank&quot;&gt;@MsCodersMadrid&lt;/a&gt;, a group of developers that work with Microsoft technologies. The proposed topic was &amp;#8220;good coding practices&amp;#8221;, and it was an open debate. People shared the tools they use for code style analysis in C#, such as StyleCop or ReSharper. We spoke about comments vs. no comments (NO!), regions vs. they are evil (EVIL!), etc., reaching similar conclusions.&lt;/p&gt;

&lt;p&gt;&amp;#8230;Then I mentioned unit testing, and things got a little bit hotter. We all agreed that unit tests are important, a good thing, and that &lt;strong&gt;any decent software project must have tests.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;However, many people questioned the necessity of tests in some cases, and argued that they are optional, a luxury, or out of reach for some scenarios. This is no way specific to any member of this group of developers, and it is not the first time I hear these same arguments, so I will try to enumerate some these with my answers, no fingers pointed.&lt;/p&gt;

&lt;h2&gt;&amp;#8220;The customer does not want quality&amp;#8221;:&lt;/h2&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  &lt;strong&gt;If a customer admits they want crap, then you don&amp;#8217;t want that customer.&lt;/strong&gt;¬†Let&amp;#8217;s say that you run a high class restaurant; You cannot have a cheap &amp;#8220;Microwave pizza&amp;#8221; at the end of your menu as a low quality option. &lt;strong&gt;The moment you offer low quality, you are not high class any more! &lt;/strong&gt;and believe me, you wanna stay high class or you will be soon replaced by someone even cheaper than you.
&lt;/p&gt;

&lt;h2&gt;&amp;#8220;Tests are important, but I have to pay the mortgage&amp;#8221;:&lt;/h2&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  When producing low quality software you are ruining yours and your company&amp;#8217;s reputation. The world is small, and besides being replaced by a cheaper alternative: &lt;strong&gt;How much time do you think it is needed so your fame is so bad that nobody wants to hire you?&lt;/strong&gt; How will you pay your mortgage then? (Also: notice that guys who say these things in action movies die quite soon)
&lt;/p&gt;

&lt;h2&gt;&amp;#8220;Tests are only needed if your team is not mature&amp;#8221;:&lt;/h2&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  Sorry, that&amp;#8217;s bull≈õhit. &lt;strong&gt;No amount of expertise and skill will keep your code from needing to be changed in the future.&lt;/strong&gt; Even if you have a team of geniuses, manually testing every feature every time you make a tiny change is awfully expensive. &lt;strong&gt;Tests are there to save you money.&lt;/strong&gt; The most mature and skilled teams I know of, test-drive all their code.
&lt;/p&gt;

&lt;h2&gt;&amp;#8220;Tests are only needed if you are developing your own product&amp;#8221;:&lt;/h2&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  Very simple: Having agreed that tests are important for quality, you are saying&lt;strong&gt;&lt;/strong&gt; that when the product is for a customer&lt;strong&gt;&lt;/strong&gt; &lt;strong&gt;you are purposely delivering low quality so you can then &lt;span style=&quot;text-decoration: underline;&quot;&gt;charge extra to fix it later&lt;/span&gt; or just leave the mess for someone else.&lt;/strong&gt; This is not only unprofessional, but also unethical.
&lt;/p&gt;

&lt;h2&gt;&amp;#8220;The customer does not want to pay for tests&amp;#8221;:&lt;/h2&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  Some argue that the customers will not want to pay for unit tests if you tell them they represent X% of the budget or Y% of the total estimated time. You may have (or want) to specify in your budget that they will get tests, but you are not obliged to go down to that level of detail with percentage or time; &lt;strong&gt;Would you also specify how much time do you spend in good naming? &lt;/strong&gt;Tests are an integral part of software, charging them separately is like your doctor charging you separately for washing his hands.
&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;And the list goes on. To end this post, I will use a quote from Michael Feathers that Leo Antoli (&lt;a href=&quot;https://twitter.com/lantoli&quot;&gt;@lantoli&lt;/a&gt;) reminded to the crowd yesterday. I think it first appeared on &lt;a href=&quot;http://www.amazon.com/s?search-alias=stripbooks&amp;amp;field-isbn=0131177052&quot;&gt;Working Effectively with Legacy Code&lt;/a&gt;, but also on Robert Martin&amp;#8217;s &lt;a href=&quot;http://www.amazon.com/s?search-alias=stripbooks&amp;amp;field-isbn=0132350882&quot;&gt;Clean Code&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;h2 style=&quot;text-align: right;&quot;&gt;
  &lt;em&gt;&amp;#8220;To me, &lt;/em&gt;legacy code&lt;em&gt; is simply&lt;br /&gt; code without tests.&amp;#8221;&lt;/em&gt;
&lt;/h2&gt;
&lt;/blockquote&gt;

&lt;h2 style=&quot;text-align: right;&quot;&gt;
  &lt;em&gt;-Michael Feathers&lt;br /&gt; &lt;/em&gt;
&lt;/h2&gt;
</description>
        <pubDate>Tue, 09 Jul 2013 00:00:00 -0400</pubDate>
        <link>http://blog.istepaniuk.com/quality-is-not-an-option/</link>
        <guid isPermaLink="true">http://blog.istepaniuk.com/quality-is-not-an-option/</guid>
        
        <category>quality</category>
        
        <category>testing</category>
        
        <category>Unit Testing</category>
        
        
        <category>.net</category>
        
        <category>agile</category>
        
        <category>testing</category>
        
      </item>
    
  </channel>
</rss>
